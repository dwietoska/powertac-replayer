<!DOCTYPE composition PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<ui:composition xmlns="http://www.w3.org/1999/xhtml"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:p="http://primefaces.org/ui"
	template="/WEB-INF/layouts/visualizer/master.xhtml">

	<ui:define name="title">Wholesale market - per timeslot scores</ui:define>

	<ui:define name="headInclude">
		<script type="text/javascript">
				
        function handleWholesaleMarketPush(data) {
			
			var array = jQuery.parseJSON(data);
			var cnt = 0;
			jQuery.each(array, function() {
				  var pushObject = this;
				  wholesaleDynDataOneTimeslot.series[cnt++].addPoint([pushObject["millis"],pushObject["profitDelta"]],false);
				  wholesaleDynDataOneTimeslot.series[cnt++].addPoint([pushObject["millis"],pushObject["energyDelta"]],false);
				});
			wholesaleDynDataOneTimeslot.redraw();
			}
        
			var wholesaleDynDataOneTimeslot;
			$(document).ready(
					function() {
						var appending = new Array("PRICE(&euro;)", "ENERGY(MWh)");
						if (#{logParametersBean.isReplayerMode}) {
								wholesaleDynDataOneTimeslot = dynDataGraph('wholesaleDynDataOneTimeslot',#{wholesaleMarketBeanReplayer.wholesaleDynDataOneTimeslot},'',getBaseDynYAxisData("Price (&euro;)","Traded energy (MWh)"), appending);				
						} else {
								wholesaleDynDataOneTimeslot = dynDataGraph('wholesaleDynDataOneTimeslot',#{wholesaleMarketBean.wholesaleDynDataOneTimeslot},'',getBaseDynYAxisData("Price (&euro;)","Traded energy (MWh)"), appending);				
						}
					}		
				);
			
			// Zurueckgesprungen im Diagramm
			function handlePushTsChoosenBackward(data) {

				var pushObjects = jQuery.parseJSON(data);
				
				var index = 0;
				var i = 0;
				var tsMillis;
				var indexPoints;
				var selectedRange = wholesaleDynDataOneTimeslot.rangeSelector.selected;
				var seriesLength = wholesaleDynDataOneTimeslot.series.length - 1;
		 		var visibleSeries = [];
				
				var index2 = 0;
				var cnt = 0;

				// Range Selector auf ALL, sonst fehlen Werte
				wholesaleDynDataOneTimeslot.rangeSelector.clickButton(5, 5, true);
				
				while (pushObjects.length > index) {
					
				    var pushObject = pushObjects[index];
				    
		 			if (!wholesaleDynDataOneTimeslot.series[index].visible) {
		 				wholesaleDynDataOneTimeslot.series[index].setVisible(true);
		 				visibleSeries.push(false);
		 			} else {
		 				visibleSeries.push(true);
		 			}
		 			
		 			wholesaleDynDataOneTimeslot.series[index].setData(pushObject, false);
				    
				    index++;
				}
				
				var visibleLengths = visibleSeries.length;
				for (var i = 0; i &lt; visibleLengths; i++) {
					if (wholesaleDynDataOneTimeslot.series[i] !== undefined) {
						wholesaleDynDataOneTimeslot.series[i].setVisible(visibleSeries[i], false);
					}
				}
				
				wholesaleDynDataOneTimeslot.redraw();
				wholesaleDynDataOneTimeslot.rangeSelector.clickButton(selectedRange, selectedRange, true);
				
// 				var pushArray = jQuery.parseJSON(data);
// 				var index = 0;
// 				var i = 0;
// 				var tsMillis;
// 				var indexPoints;
// 				var selectedRange = wholesaleDynDataOneTimeslot.rangeSelector.selected;
// 				var seriesLength = wholesaleDynDataOneTimeslot.series.length - 1;
// 		 		var visibleSeries = [];
				
// //		 		// Auf All setzen, damit alle Werte geloescht werden koennen
// //		 		// Ansonsten z.B. range auf 1w und dann werden nich alle Werte im Diagramm angezeigt
// //		 		// Dadurch kommt dann beim loeschen die Meldung, distributionDynDataOneTimeslot.series[index].points[0].remove(false)
// //		 		// is not a function.
// //		 		// Es koennen vom Broker Model fuer eine Ts Werte fehlen, deswegen hat die obige Loesung
// //		 		// auch Probleme mit is not defined geworfen
// //		 		// -> Series unterschiedliche Laenge
// 				wholesaleDynDataOneTimeslot.rangeSelector.clickButton(5, 5, true);
		 		
// 		 		while (index &lt;= seriesLength) {
		 			
// 		 			if (!wholesaleDynDataOneTimeslot.series[index].visible) {
// 		 				wholesaleDynDataOneTimeslot.series[index].setVisible(true);
// 		 				visibleSeries.push(false);
// 		 			} else {
// 		 				visibleSeries.push(true);
// 		 			}
		 			
// 		 	 		indexPoints = wholesaleDynDataOneTimeslot.series[index].points.length - 1;

// 		 			i = 0;
		 	 						
// 		 	 		while (indexPoints >= 0) {

// 		 	 			if (pushArray.indexOf(wholesaleDynDataOneTimeslot.series[index].points[indexPoints].x) >= 0) {

// 		 	 				wholesaleDynDataOneTimeslot.series[index].points[indexPoints].remove(false);
// 		 	 			}
		 	 			
// 		 	 			indexPoints--;
// 		 	 		}

// 		 			index++;
// 		 		}
		 		
// 				var visibleLengths = visibleSeries.length;
// 				for (var i = 0; i &lt; visibleLengths; i++) {
// 					if (wholesaleDynDataOneTimeslot.series[i] !== undefined) {
// 						wholesaleDynDataOneTimeslot.series[i].setVisible(visibleSeries[i], false);
// 					}
// 				}
				
// 				wholesaleDynDataOneTimeslot.redraw();
// 				wholesaleDynDataOneTimeslot.rangeSelector.clickButton(selectedRange, selectedRange, true);
			}
			
// 			// Zurueckgesprungen im Diagramm
// 			function handlePushTsChoosenBackward(data) {
				
// 				var pushArray = jQuery.parseJSON(data);
// 				var index = 0;
// 				var i = 0;
// 				var tsMillis;
// 				var indexPoints;
// 				var selectedRange = wholesaleDynDataOneTimeslot.rangeSelector.selected;
// 				var seriesLength = wholesaleDynDataOneTimeslot.series.length - 1;
		 			
// //		 		// Auf All setzen, damit alle Werte geloescht werden koennen
// //		 		// Ansonsten z.B. range auf 1w und dann werden nich alle Werte im Diagramm angezeigt
// //		 		// Dadurch kommt dann beim loeschen die Meldung, distributionDynDataOneTimeslot.series[index].points[0].remove(false)
// //		 		// is not a function.
// //		 		// Es koennen vom Broker Model fuer eine Ts Werte fehlen, deswegen hat die obige Loesung
// //		 		// auch Probleme mit is not defined geworfen
// //		 		// -> Series unterschiedliche Laenge
// 				wholesaleDynDataOneTimeslot.rangeSelector.clickButton(5, 5, true);
		 		
// 		 		while (index &lt;= seriesLength) {
		 	 		
// 		 	 		indexPoints = wholesaleDynDataOneTimeslot.series[index].points.length - 1;
// 		 			i = 0;
		 			
// 		 			// Alle Millis Ts durchlaufen
// 		 	 		while (i &lt; pushArray.length) {
		 	 			
// 		 	 			tsMillis = pushArray[i];
		 	 				
// 		 	 			// Entspricht der letzte Punkt im Diagramm (TsMillis Wert auf der x-Achse)
// 		 	 			// den zu loeschenden TsMillisWert. Diese werden rueckwaerts durchgelaufen
// 		 	 			// und im Diagramm als Points geloescht. Beachtet auch, dass im Diagramm
// 		 	 			// fuer einen Ts der Punkt im Diagramm fehlen kann.
// 		 	 			if (wholesaleDynDataOneTimeslot.series[index].points[indexPoints].x == tsMillis) {
		 	 					
// 		 	 				wholesaleDynDataOneTimeslot.series[index].points[indexPoints].remove(false);
// 		 	 	 			indexPoints--;
// 		 	 			} 	 	
		 	 			
// 		 	 			i++;
// 		 	 		}

// 		 			index++;
// 		 		}
		 		
// 		 		wholesaleDynDataOneTimeslot.redraw();
// 		 		wholesaleDynDataOneTimeslot.rangeSelector.clickButton(selectedRange, selectedRange, true);
// 			}
			
	// Vorspringen im Diagramm
	function handleWholesaleMarketPushTsChoosen(data) {
		
		var pushObjects = jQuery.parseJSON(data);
		var index = 0;
		var index2 = 0;
		var cnt = 0;
		var selectedRange = wholesaleDynDataOneTimeslot.rangeSelector.selected;
		var visibleSeries = [];
		
		index = 0;
		
		while (pushObjects.length > index) {
			
		    var pushObject = pushObjects[index];
		    
		    index2 = 0;
		    cnt = 0;
		    
		    while (pushObject.length > index2) {

		    	var object = pushObject[index2];
		    	var indexSeries = object["index"];

	 			if (!wholesaleDynDataOneTimeslot.series[indexSeries].visible) {
	 				wholesaleDynDataOneTimeslot.series[indexSeries].setVisible(true);
	 				visibleSeries.push(false);
	 			} else {
	 				visibleSeries.push(true);
	 			}
	 			
	 			wholesaleDynDataOneTimeslot.series[indexSeries++].addPoint([object["millis"],object["profitDelta"]],false);
		    
	 			if (!wholesaleDynDataOneTimeslot.series[indexSeries].visible) {
	 				wholesaleDynDataOneTimeslot.series[indexSeries].setVisible(true);
	 				visibleSeries.push(false);
	 			} else {
	 				visibleSeries.push(true);
	 			}
	 			
	 			wholesaleDynDataOneTimeslot.series[indexSeries++].addPoint([object["millis"],object["energyDelta"]],false);
				index2++;
		    }
		    
		    index++;
		}
		
		var visibleLengths = visibleSeries.length;
		for (var i = 0; i &lt; visibleLengths; i++) {
			if (wholesaleDynDataOneTimeslot.series[i] !== undefined) {
				wholesaleDynDataOneTimeslot.series[i].setVisible(visibleSeries[i], false);
			}
		}
		
		wholesaleDynDataOneTimeslot.redraw();
		wholesaleDynDataOneTimeslot.rangeSelector.clickButton(selectedRange, selectedRange, true); 
	}
				
// 			function handleWholesaleMarketPushTsChoosen(data) {
// // 				console.log('wholesalePerTs');
// // 				console.log(data);
// 				var pushObjects = jQuery.parseJSON(data);
// 				var index = 0;
// 				var index2 = 0;
// 				var cnt = 0;
// 				var selectedRange = wholesaleDynDataOneTimeslot.rangeSelector.selected;
				
// //		 		while (distributionDynDataOneTimeslot.series[0].points.length > 0) {
				
// //		 			distributionDynDataOneTimeslot.series[0].points[0].remove(false);
// //		 			distributionDynDataOneTimeslot.series[1].points[0].remove(false);
// //		 		}
				
// // 				// Bei Default laenge 2, aber 3
// // 				// Bei Mehr dann laenge 4, aber 5???
// // 				var seriesLength = wholesaleDynDataOneTimeslot.series.length - 1;

// // 				// Remove all series points
// // 				while (wholesaleDynDataOneTimeslot.series[0].points.length > 0) {
					
// // 					index = 0;
// // 					cnt = 0;

// // 					while (!(index >= seriesLength)) {
						
// // 						wholesaleDynDataOneTimeslot.series[cnt++].points[0].remove(false);
// // 						index++;
// // 						wholesaleDynDataOneTimeslot.series[cnt++].points[0].remove(false);
// // 						index++;
// // 					}
// // 				}
				
// // 				index = 0;
				
// 				while (pushObjects.length > index) {
					
// 				    var pushObject = pushObjects[index];
				    
// 				    index2 = 0;
// 				    cnt = 0;
				    
// 				    while (pushObject.length > index2) {

// 				    	var object = pushObject[index2];
// 				    	var indexSeries = object["index"];

// 				    	wholesaleDynDataOneTimeslot.series[indexSeries++].addPoint([object["millis"],object["profitDelta"]],false);
// 				    	wholesaleDynDataOneTimeslot.series[indexSeries++].addPoint([object["millis"],object["energyDelta"]],false);
// 						index2++;
// 				    }
				    
// 				    index++;
// 				}

				
// 				wholesaleDynDataOneTimeslot.redraw();
// 				wholesaleDynDataOneTimeslot.rangeSelector.clickButton(selectedRange, selectedRange, true);
// 			}
			  
		</script>
	</ui:define>

	<ui:define name="maincontent">
	
		<script>
			var appending = new Array("PRICE(&euro;)", "ENERGY(MWh)");
			wholesaleDynDataOneTimeslot = dynDataGraph('wholesaleDynDataOneTimeslot',#{wholesaleMarketBeanReplayer.wholesaleDynDataOneTimeslot},'',getBaseDynYAxisData("Price (&euro;)","Traded energy (MWh)"), appending);
		</script>
		
		<div id="wholesaleDynDataOneTimeslot"
			style="min-width: 400px; height: 620px; margin: 0 auto" />
		<p:socket onMessage="handleWholesaleMarketPush"
			channel="/wholesalemarketpush" rendered="#{!logParametersBean.isReplayerMode}" />
	</ui:define>

	<ui:define name="rowcontent">
	</ui:define>

     <ui:define name="handlePush">
		<p:socket onMessage="handleWholesaleMarketPushTsChoosen" channel="/marketTransactionsTsChoosen" rendered="#{logParametersBean.isReplayerMode}" />
		<p:socket onMessage="handlePushTsChoosenBackward" channel="/tsChoosenBackwardSafetyTs" rendered="#{logParametersBean.isReplayerMode}" />
		<p:socket onMessage="handleWholesaleMarketPushTsChoosen" channel="/wholesalepertimeslotExtendedChangeTimeslot#{session.id}" rendered="#{logParametersBean.isReplayerMode}" />
		<p:socket onMessage="handlePushTsChoosenBackward" channel="/wholesalepertimeslotBackwardExtendedChangeTimeslot#{session.id}" rendered="#{logParametersBean.isReplayerMode}" />
	</ui:define>

</ui:composition>