<!DOCTYPE composition PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<ui:composition xmlns="http://www.w3.org/1999/xhtml"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:p="http://primefaces.org/ui"
	template="/WEB-INF/layouts/visualizer/master.xhtml">

	<ui:define name="title">Distribution - per timeslot scores</ui:define>

	<ui:define name="headInclude">
		<script type="text/javascript">
			var distributionDynDataOneTimeslot;
	  		$(document).ready(
				function() {
					var appending = new Array("PRICE(&euro;)", "ENERGY(kWh)");

					if (#{logParametersBean.isReplayerMode}) {
						distributionDynDataOneTimeslot = dynDataGraph('distributionDynDataOneTimeslot',#{distributionBeanReplayer.distributionDynDataOneTimeslot},'',getBaseDynYAxisData("Price (&euro;)","Distributed energy (kWh)"), appending);
					} else {
						distributionDynDataOneTimeslot = dynDataGraph('distributionDynDataOneTimeslot',#{distributionBean.distributionDynDataOneTimeslot},'',getBaseDynYAxisData("Price (&euro;)","Distributed energy (kWh)"), appending);
					}
				});
	  	
			function handleDistributionPush(data) {
// 		console.log('Dis Push');	
// 		console.log(data);		
				var array = jQuery.parseJSON(data);
				var selectedRange = distributionDynDataOneTimeslot.rangeSelector.selected;
				var cnt = 0;
// 		var index = 0;
				jQuery.each(array, function() {
			 		 var pushObject = this;
			 		 distributionDynDataOneTimeslot.series[cnt++].addPoint([pushObject["millis"],pushObject["profitDelta"]],false);
			 		 distributionDynDataOneTimeslot.series[cnt++].addPoint([pushObject["millis"],pushObject["energyDelta"]],false);
// 			  index++;
// 			  console.log('Anzahl ' + index);
				});
				distributionDynDataOneTimeslot.redraw();
				distributionDynDataOneTimeslot.rangeSelector.clickButton(selectedRange, selectedRange, true); 
   		 	}
	
			// Zurueckgesprungen im Diagramm
			function handleDistributionPushTsChoosenBackward(data) {

				var pushObjects = jQuery.parseJSON(data);
		
				var index = 0;
				var i = 0;
				var tsMillis;
				var indexPoints;
				var selectedRange = distributionDynDataOneTimeslot.rangeSelector.selected;
				var seriesLength = distributionDynDataOneTimeslot.series.length - 1;
 				var visibleSeries = [];
		
				var index2 = 0;
				var cnt = 0;

				// Range Selector auf ALL, sonst fehlen Werte
				distributionDynDataOneTimeslot.rangeSelector.clickButton(5, 5, true);
		
				while (pushObjects.length > index) {
			
		  			var pushObject = pushObjects[index];
		    
 					if (!distributionDynDataOneTimeslot.series[index].visible) {
 						distributionDynDataOneTimeslot.series[index].setVisible(true);
 						visibleSeries.push(false);
 					} else {
 						visibleSeries.push(true);
 					}
 			
 					distributionDynDataOneTimeslot.series[index].setData(pushObject, false);
		    
		 		   index++;
				}
		
				var visibleLengths = visibleSeries.length;
				for (var i = 0; i &lt; visibleLengths; i++) {
					if (distributionDynDataOneTimeslot.series[i] !== undefined) {
						distributionDynDataOneTimeslot.series[i].setVisible(visibleSeries[i], false);
					}
				}
		
				distributionDynDataOneTimeslot.redraw();
				distributionDynDataOneTimeslot.rangeSelector.clickButton(selectedRange, selectedRange, true);
		
		
// 		var pushArray = jQuery.parseJSON(data);
// 		var index = 0;
// 		var i = 0;
// 		var tsMillis;
// 		var indexPoints;
// 		var selectedRange = distributionDynDataOneTimeslot.rangeSelector.selected;
// 		var seriesLength = distributionDynDataOneTimeslot.series.length - 1;
//  		var visibleSeries = [];
		
// // 		// Auf All setzen, damit alle Werte geloescht werden koennen
// // 		// Ansonsten z.B. range auf 1w und dann werden nich alle Werte im Diagramm angezeigt
// // 		// Dadurch kommt dann beim loeschen die Meldung, distributionDynDataOneTimeslot.series[index].points[0].remove(false)
// // 		// is not a function.
// // 		// Es koennen vom Broker Model fuer eine Ts Werte fehlen, deswegen hat die obige Loesung
// // 		// auch Probleme mit is not defined geworfen
// // 		// -> Series unterschiedliche Laenge
// 		distributionDynDataOneTimeslot.rangeSelector.clickButton(5, 5, true);
 		
//  		while (index &lt;= seriesLength) {
 			
//  			if (!distributionDynDataOneTimeslot.series[index].visible) {
//  				distributionDynDataOneTimeslot.series[index].setVisible(true);
//  				visibleSeries.push(false);
//  			} else {
//  				visibleSeries.push(true);
//  			}
 			
//  	 		indexPoints = distributionDynDataOneTimeslot.series[index].points.length - 1;

//  			i = 0;
 	 						
//  	 		while (indexPoints >= 0) {

//  	 			if (pushArray.indexOf(distributionDynDataOneTimeslot.series[index].points[indexPoints].x) >= 0) {

//  	 				distributionDynDataOneTimeslot.series[index].points[indexPoints].remove(false);
//  	 			}
 	 			
//  	 			indexPoints--;
//  	 		}

//  			index++;
//  		}
 		
// 		var visibleLengths = visibleSeries.length;
// 		for (var i = 0; i &lt; visibleLengths; i++) {
// 			if (distributionDynDataOneTimeslot.series[i] !== undefined) {
// 				distributionDynDataOneTimeslot.series[i].setVisible(visibleSeries[i], false);
// 			}
// 		}
		
// 		distributionDynDataOneTimeslot.redraw();
// 		distributionDynDataOneTimeslot.rangeSelector.clickButton(selectedRange, selectedRange, true);
			}
	
// 	// Zurueckgesprungen im Diagramm
// 	function handleDistributionPushTsChoosenBackward(data) {
// 		var pushArray = jQuery.parseJSON(data);
// 		var index = 0;
// 		var i = 0;
// 		var tsMillis;
// 		var indexPoints;
// 		var selectedRange = distributionDynDataOneTimeslot.rangeSelector.selected;
// 		var seriesLength = distributionDynDataOneTimeslot.series.length - 1;
		
// //  		console.log(pushArray);
 			
// // 		// Auf All setzen, damit alle Werte geloescht werden koennen
// // 		// Ansonsten z.B. range auf 1w und dann werden nich alle Werte im Diagramm angezeigt
// // 		// Dadurch kommt dann beim loeschen die Meldung, distributionDynDataOneTimeslot.series[index].points[0].remove(false)
// // 		// is not a function.
// // 		// Es koennen vom Broker Model fuer eine Ts Werte fehlen, deswegen hat die obige Loesung
// // 		// auch Probleme mit is not defined geworfen
// // 		// -> Series unterschiedliche Laenge
// 		distributionDynDataOneTimeslot.rangeSelector.clickButton(5, 5, true);
 		
//  		while (index &lt;= seriesLength) {
 		
//  	 		indexPoints = distributionDynDataOneTimeslot.series[index].points.length - 1;
//  			i = 0;
 			
//  			// Alle Millis Ts durchlaufen
//  	 		while (i &lt; pushArray.length) {
 	 			
//  	 			tsMillis = pushArray[i];
 	 				
//  	 			// Entspricht der letzte Punkt im Diagramm (TsMillis Wert auf der x-Achse)
//  	 			// den zu loeschenden TsMillisWert. Diese werden rueckwaerts durchgelaufen
//  	 			// und im Diagramm als Points geloescht. Beachtet auch, dass im Diagramm
//  	 			// fuer einen Ts der Punkt im Diagramm fehlen kann.
//  	 			if (distributionDynDataOneTimeslot.series[index].points[indexPoints].x == tsMillis) {
 	 					
//  	 	 			distributionDynDataOneTimeslot.series[index].points[indexPoints].remove(false);
//  	 	 			indexPoints--;
//  	 			} 	 	
 	 			
//  	 			i++;
//  	 		}

//  			index++;
//  		}
 		
//  		distributionDynDataOneTimeslot.redraw();
//  		distributionDynDataOneTimeslot.rangeSelector.clickButton(selectedRange, selectedRange, true);
 		
//  		// ------------------------ Vorherige
//  		//  		var seriesLength = distributionDynDataOneTimeslot.series.length - 1;
		
// //  		while (index &lt;= seriesLength) {
 		
		
// //  			while (distributionDynDataOneTimeslot.series[index].points.length > 0) {
			
// //  				distributionDynDataOneTimeslot.series[index].points[0].remove(false);
// //  			}
		
// //  			index++;
// //  		}
// 	}
	
			// Vorspringen im Diagramm
			function handleDistributionPushTsChoosen(data) {
		
				var pushObjects = jQuery.parseJSON(data);
				var index = 0;
				var index2 = 0;
				var cnt = 0;
				var selectedRange = distributionDynDataOneTimeslot.rangeSelector.selected;
				var visibleSeries = [];
		
				index = 0;
		
				while (pushObjects.length > index) {
			
		  		  var pushObject = pushObjects[index];
		    
		 		   index2 = 0;
		 		   cnt = 0;
		    
		  		  while (pushObject.length > index2) {

		 		  		var object = pushObject[index2];
		  		  		var indexSeries = object["index"];

	 					if (!distributionDynDataOneTimeslot.series[indexSeries].visible) {
	 						distributionDynDataOneTimeslot.series[indexSeries].setVisible(true);
	 						visibleSeries.push(false);
	 					} else {
	 						visibleSeries.push(true);
	 					}
	 				
	 					distributionDynDataOneTimeslot.series[indexSeries++].addPoint([object["millis"],object["profitDelta"]],false);
		    
	 					if (!distributionDynDataOneTimeslot.series[indexSeries].visible) {
	 						distributionDynDataOneTimeslot.series[indexSeries].setVisible(true);
	 						visibleSeries.push(false);
	 					} else {
	 						visibleSeries.push(true);
	 					}
	 				
	 					distributionDynDataOneTimeslot.series[indexSeries++].addPoint([object["millis"],object["energyDelta"]],false);
						index2++;
		  		  }
		    
		 		   index++;
				}
		
				var visibleLengths = visibleSeries.length;
				for (var i = 0; i &lt; visibleLengths; i++) {
					if (distributionDynDataOneTimeslot.series[i] !== undefined) {
						distributionDynDataOneTimeslot.series[i].setVisible(visibleSeries[i], false);
					}
				}
		
				distributionDynDataOneTimeslot.redraw();
				distributionDynDataOneTimeslot.rangeSelector.clickButton(selectedRange, selectedRange, true); 
			}
	
// 	// Vorspringen im Diagramm
// 	// Nichts mehr loeschen, sondern nur noch die weiteren Nachrichten hinzufuegen.
// 	function handleDistributionPushTsChoosen(data) {

// 		var pushObjects = jQuery.parseJSON(data);
// 		var index = 0;
// 		var index2 = 0;
// 		var cnt = 0;
// 		var selectedRange = distributionDynDataOneTimeslot.rangeSelector.selected;

// // Alt
// // 		Bei Default laenge 2, aber 3
// // 		Bei Mehr dann laenge 4, aber 5???
// // 		var seriesLength = distributionDynDataOneTimeslot.series.length - 1;
// // 		// Remove all series points
// // 		while (distributionDynDataOneTimeslot.series[0].points.length > 0) {			
// // 			index = 0;
// // 			cnt = 0;

// // 			while (!(index >= seriesLength)) {
				
// // 				distributionDynDataOneTimeslot.series[cnt].points[0].remove(false);
// // 				cnt++;
// // 				index++;

// // 				distributionDynDataOneTimeslot.series[cnt].points[0].remove(false);
// // 				cnt++;
// // 				index++;				
// // 			}
// // 		}

// //		Neuer		
// // 		// Auf All setzen, damit alle Werte geloescht werden koennen
// // 		// Ansonsten z.B. range auf 1w und dann werden nich alle Werte im Diagramm angezeigt
// // 		// Dadurch kommt dann beim loeschen die Meldung, distributionDynDataOneTimeslot.series[index].points[0].remove(false)
// // 		// is not a function.
// // 		// Es koennen vom Broker Model fuer eine Ts Werte fehlen, deswegen hat die obige Loesung
// // 		// auch Probleme mit is not defined geworfen
// // 		// -> Series unterschiedliche Laenge
// // 		distributionDynDataOneTimeslot.rangeSelector.clickButton(5, 5, true);
		
// //  		var seriesLength = distributionDynDataOneTimeslot.series.length - 1;
		
// //  		while (index &lt;= seriesLength) {
 		
// //  			while (distributionDynDataOneTimeslot.series[index].points.length > 0) {

// //  				distributionDynDataOneTimeslot.series[index].points[0].remove(false);
// //  			}
		
// //  			index++;
// //  		}

// // 		Alt
// // 		index = 0;
		
// // 		while (pushObjects.length > index) {
			
// // 		    var pushObject = pushObjects[index];
		    
// // 		    index2 = 0;
// // 		    cnt = 0;
		    
// // 		    while (pushObject.length > index2) {

// // 		    	var object = pushObject[index2];

// // 				distributionDynDataOneTimeslot.series[cnt++].addPoint([object["millis"],object["profitDelta"]],false);
// // 				distributionDynDataOneTimeslot.series[cnt++].addPoint([object["millis"],object["energyDelta"]],false);
// // 				index2++;
// // 		    }
		    
// // 		    index++;
// // 		}

// 		index = 0;
		
// 		while (pushObjects.length > index) {
			
// 		    var pushObject = pushObjects[index];
		    
// 		    index2 = 0;
// 		    cnt = 0;
		    
// 		    while (pushObject.length > index2) {

// 		    	var object = pushObject[index2];
// 		    	var indexSeries = object["index"];

// 				distributionDynDataOneTimeslot.series[indexSeries++].addPoint([object["millis"],object["profitDelta"]],false);				
// 				distributionDynDataOneTimeslot.series[indexSeries++].addPoint([object["millis"],object["energyDelta"]],false);
// 				index2++;
// 		    }
		    
// 		    index++;
// 		}
// // 		distributionDynDataOneTimeslot.rangeSelector.buttons[5].setState(2);
// // 		distributionDynDataOneTimeslot.rangeSelector.clickButton(5, 5, true);

// 		distributionDynDataOneTimeslot.redraw();
// // 		distributionDynDataOneTimeslot.rangeSelector.clickButton(0, distributionDynDataOneTimeslot.rangeSelector.buttonOptions[5], false);			
// // 		jQuery.each(pushObjects, function() {
			
// // 			  var pushObject = this;
// // 			  console.log('Replayer Push ' + pushObject);
// 			 // distributionDynDataOneTimeslot.series[0].addPoint([pushObject["millis"],pushObject["profitDelta"]],false);
// 			 // distributionDynDataOneTimeslot.series[1].addPoint([pushObject["millis"],pushObject["energyDelta"]],false);
// // 		});
// 		distributionDynDataOneTimeslot.rangeSelector.clickButton(selectedRange, selectedRange, true); 
// 	}
		</script>
	</ui:define>

	<ui:define name="maincontent">
	
		<script>
			var appending = new Array("PRICE(&euro;)", "ENERGY(kWh)");
			distributionDynDataOneTimeslot = dynDataGraph('distributionDynDataOneTimeslot',#{distributionBeanReplayer.distributionDynDataOneTimeslot},'',getBaseDynYAxisData("Price (&euro;)","Distributed energy (kWh)"), appending);
		</script>
		
		<div id="distributionDynDataOneTimeslot"
			style="min-width: 400px; height: 620px; margin: 0 auto" />
		<p:socket onMessage="handleDistributionPush" channel="/distributionpush" rendered="#{!logParametersBean.isReplayerMode}" />
	</ui:define>

	<ui:define name="rowcontent">
	</ui:define>

     <ui:define name="handlePush">
		<p:socket onMessage="handleDistributionPushTsChoosen" channel="/distributionTsChoosen" rendered="#{logParametersBean.isReplayerMode}" />
		<p:socket onMessage="handleDistributionPushTsChoosenBackward" channel="/tsChoosenBackward" rendered="#{logParametersBean.isReplayerMode}" />
		<p:socket onMessage="handleDistributionPushTsChoosen" channel="/distributionpertimeslotExtendedChangeTimeslot#{session.id}" rendered="#{logParametersBean.isReplayerMode}" />
		<p:socket onMessage="handleDistributionPushTsChoosenBackward" channel="/distributionpertimeslotBackwardExtendedChangeTimeslot#{session.id}" rendered="#{logParametersBean.isReplayerMode}" />
	</ui:define>

</ui:composition>